---
- hosts: localhost
  connection: local
  become: false

  vars:
    plex_movies: /jewflix/plex/couchpotato
    plex_movies_retention: 60
    plex_tv: /jewflix/plex/pymedusa
    plex_tv_retention: 90


  tasks:
    - name: Ensure the plex movies directory is present
      tags:
        - jfx_clean_plex
        - jfx_clean_plex_movies
      stat:
        get_attributes: true
        get_checksum: false
        get_md5: false
        get_mime: false
        path: "{{ plex_movies }}"
      register: _plex_movies

    - block:

        - name: Gather a list of movies exceeding plex retention policy
          find:
            age: "{{ plex_movies_retention|string + 'd' }}"
            age_stamp: mtime
            excludes: '.sync'
            file_type: directory
            paths: "{{ plex_movies }}"
          register: _plex_find_movies

        - name: Delete movies exceeding plex retention policy
          become: true
          become_user: "{{ plex_movies|basename }}"
          file:
            path: "{{ plex_movie_path }}"
            state: absent
          loop: "{{ _plex_find_movies.files|json_query('[].path') }}"
          loop_control:
            label: "{{ plex_movie_path }}"
            loop_var: plex_movie_path

      tags:
        - jfx_clean_plex
        - jfx_clean_plex_movies
      when: _plex_movies.stat.exists

    - name: Ensure the plex tv directory is present
      tags:
        - jfx_clean_plex
        - jfx_clean_plex_tv
      stat:
        get_attributes: true
        get_checksum: false
        get_md5: false
        get_mime: false
        path: "{{ plex_tv }}"
      register: _plex_tv

    - block:

        - name: Gather a list of tv shows exceeding plex retention policy
          find:
            age: "{{ plex_tv_retention|string + 'd' }}"
            age_stamp: mtime
            depth: 3
            excludes: '.sync'
            file_type: file
            paths: "{{ plex_tv }}"
            recurse: true
          register: _plex_find_tv

        - name: Delete tv shows exceeding plex retention policy
          become: true
          become_user: "{{ plex_tv|basename }}"
          file:
            path: "{{ plex_tv_path }}"
            state: absent
          loop: "{{ _plex_find_tv.files|json_query('[].path') }}"
          loop_control:
            label: "{{ plex_tv_path }}"
            loop_var: plex_tv_path

      tags:
        - jfx_clean_plex
        - jfx_clean_plex_tv
      when: _plex_tv.stat.exists
...
